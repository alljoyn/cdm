/******************************************************************************
 * Copyright (c) 2016 Open Connectivity Foundation (OCF) and AllJoyn Open
 *    Source Project (AJOSP) Contributors and others.
 *
 *    SPDX-License-Identifier: Apache-2.0
 *
 *    All rights reserved. This program and the accompanying materials are
 *    made available under the terms of the Apache License, Version 2.0
 *    which accompanies this distribution, and is available at
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Copyright 2016 Open Connectivity Foundation and Contributors to
 *    AllSeen Alliance. All rights reserved.
 *
 *    Permission to use, copy, modify, and/or distribute this software for
 *    any purpose with or without fee is hereby granted, provided that the
 *    above copyright notice and this permission notice appear in all
 *    copies.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
 *     WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
 *     WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
 *     AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 *     DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 *     PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 *     TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 *     PERFORMANCE OF THIS SOFTWARE.
 ******************************************************************************/

// This file is automatically generated. Do not edit it.

#include <alljoyn/cdm/common/LogModule.h>
#include "WarpCoreInterface.h"

namespace ajn {
namespace services {

const char* const WarpCoreInterface::INTERFACE_NAME = "org.GalaxyClass.Engineering.WarpCore";
const CdmInterfaceType WarpCoreInterface::INTERFACE_TYPE = VENDOR_DEFINED_INTERFACE;


const uint16_t WarpCoreInterface::s_interfaceVersion = 1;

const qcc::String WarpCoreInterface::s_xml =
"<node xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:noNamespaceSchemaLocation='http://www.allseenalliance.org/schemas/introspect.xsd'>"
"    <interface name='org.GalaxyClass.Engineering.WarpCore'>"
"        <annotation name='org.alljoyn.Bus.DocString.En' value='This interface provides the capability to set a warp factor and engage the warp drive.'/>"
"        <annotation name='org.alljoyn.Bus.Secure' value='true'/>"
"        <property name='Version' type='q' access='read'>"
"            <annotation name='org.alljoyn.Bus.DocString.En' value='The interface version.'/>"
"            <annotation name='org.freedesktop.DBus.Property.EmitsChangedSignal' value='const'/>"
"        </property>"
"        <property name='WarpFactor' type='d' access='readwrite'>"
"            <annotation name='org.alljoyn.Bus.DocString.En' value='The desired warp factor.'/>"
"            <annotation name='org.freedesktop.DBus.Property.EmitsChangedSignal' value='true'/>"
"            <annotation name='org.alljoyn.Bus.Type.Min' value='1.0'/>"
"            <annotation name='org.alljoyn.Bus.Type.Max' value='9.8'/>"
"        </property>"
"        <property name='CurrentWarpFactor' type='d' access='read'>"
"            <annotation name='org.alljoyn.Bus.DocString.En' value='The current warp factor.'/>"
"            <annotation name='org.freedesktop.DBus.Property.EmitsChangedSignal' value='true'/>"
"        </property>"
"        <property name='IsEngaged' type='b' access='read'>"
"            <annotation name='org.alljoyn.Bus.DocString.En' value='Current state of the warp core.'/>"
"            <annotation name='org.freedesktop.DBus.Property.EmitsChangedSignal' value='true'/>"
"        </property>"
"        <method name='Engage'>"
"            <annotation name='org.alljoyn.Bus.DocString.En' value='Engage the warp core and enter warp.'/>"
"        </method>"
"        <method name='Disengage'>"
"            <annotation name='org.alljoyn.Bus.DocString.En' value='Return to impulse.'/>"
"        </method>"
"    </interface>"
"</node>"
;

const qcc::String WarpCoreInterface::s_prop_Version = "Version";
const qcc::String WarpCoreInterface::s_prop_WarpFactor = "WarpFactor";
const qcc::String WarpCoreInterface::s_prop_CurrentWarpFactor = "CurrentWarpFactor";
const qcc::String WarpCoreInterface::s_prop_IsEngaged = "IsEngaged";
const qcc::String WarpCoreInterface::s_method_Engage = "Engage";
const qcc::String WarpCoreInterface::s_method_Disengage = "Disengage";

} //namespace services
} //namespace ajn
