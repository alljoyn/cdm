# 
# Copyright (c) 2016 Open Connectivity Foundation (OCF) and AllJoyn Open
#    Source Project (AJOSP) Contributors and others.
# 
#    SPDX-License-Identifier: Apache-2.0
# 
#    All rights reserved. This program and the accompanying materials are
#    made available under the terms of the Apache License, Version 2.0
#    which accompanies this distribution, and is available at
#    http://www.apache.org/licenses/LICENSE-2.0
# 
#    Copyright 2016 Open Connectivity Foundation and Contributors to
#    AllSeen Alliance. All rights reserved.
# 
#    Permission to use, copy, modify, and/or distribute this software for
#    any purpose with or without fee is hereby granted, provided that the
#    above copyright notice and this permission notice appear in all
#    copies.
# 
#     THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
#     WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
#     WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
#     AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
#     DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
#     PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
#     TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
#     PERFORMANCE OF THIS SOFTWARE.

Import('cdm_env')

if not cdm_env.has_key('_ALLJOYNCORE_'):
    cdm_env.Append(LIBS = ['alljoyn'])
    if cdm_env['BR'] == 'on' :
        brFile = cdm_env.subst('$DISTDIR') + '/cpp/lib/BundledRouter.o'
        cdm_env['brobj'] = File(brFile)
        cdm_env['ajrlib'] = 'ajrouter'
    if cdm_env['OS'] == 'openwrt':
        cdm_env.AppendUnique(LIBS = [ 'stdc++', 'pthread' ])

# Make cdm dist a sub-directory of the alljoyn dist.  This avoids any conflicts with alljoyn dist targets.
cdm_env['CDM_DISTDIR'] = cdm_env['DISTDIR'] + '/cdm'

cdm_env.Install('$CDM_DISTDIR/framework/inc/alljoyn/cdm/common', cdm_env.Glob('framework/inc/alljoyn/cdm/common/*.h'))
cdm_env.Install('$CDM_DISTDIR/framework/inc/alljoyn/cdm/util', cdm_env.Glob('framework/inc/alljoyn/cdm/util/*.h'))
cdm_env.Install('$CDM_DISTDIR/framework/inc/alljoyn/cdm/controllee', cdm_env.Glob('framework/inc/alljoyn/cdm/controllee/*.h'))
cdm_env.Install('$CDM_DISTDIR/framework/inc/alljoyn/cdm/controller', cdm_env.Glob('framework/inc/alljoyn/cdm/controller/*.h'))

cdm_env.Install('$CDM_DISTDIR/interfaces/inc/interfaces/controllee', cdm_env.Glob('interfaces/inc/interfaces/controllee/*.h'))
cdm_env.Install('$CDM_DISTDIR/interfaces/inc/interfaces/controller', cdm_env.Glob('interfaces/inc/interfaces/controller/*.h'))

for component in ('common', 'controllee', 'controller'):
    cdm_env.Install('$CDM_DISTDIR/interfaces/inc/interfaces/%s/operation' % component, cdm_env.Glob('interfaces/inc/interfaces/%s/operation/*.h' % component))
    cdm_env.Install('$CDM_DISTDIR/interfaces/inc/interfaces/%s/environment' % component, cdm_env.Glob('interfaces/inc/interfaces/%s/environment/*.h' % component))
    cdm_env.Install('$CDM_DISTDIR/interfaces/inc/interfaces/%s/input' % component, cdm_env.Glob('interfaces/inc/interfaces/%s/input/*.h' % component))
    cdm_env.Install('$CDM_DISTDIR/interfaces/inc/interfaces/%s/userinterfacesettings' % component, cdm_env.Glob('interfaces/inc/interfaces/%s/userinterfacesettings/*.h' % component))

# Libraries
cdm_env.Install('$CDM_DISTDIR/lib', cdm_env.SConscript('framework/src/SConscript', exports = ['cdm_env']))
cdm_env.Install('$CDM_DISTDIR/lib', cdm_env.SConscript('interfaces/src/SConscript', exports = ['cdm_env']))

# Sample programs
if cdm_env['CPU'] not in ['armv7', 'arm64']:
    if cdm_env['BUILD_CDM_SAMPLES'] == 'on':
        cdm_env.Install('$CDM_DISTDIR/bin', cdm_env.SConscript('samples/SConscript', exports = ['cdm_env']))

    #Build Unit Tests
    cdm_env.Install('$CDM_DISTDIR/cdm/bin', cdm_env.SConscript('unit_test/DUT/SConscript', exports = ['cdm_env']))
    cdm_env.Install('$CDM_DISTDIR/cdm/bin', cdm_env.SConscript('unit_test/ServiceFramework/SConscript', exports = ['cdm_env']))

    # Build docs
    installDocs = cdm_env.SConscript('docs/SConscript', exports = ['cdm_env'])
    cdm_env.Depends(installDocs, cdm_env.Glob('$CDM_DISTDIR/inc/alljoyn/cdm/*.h'));
