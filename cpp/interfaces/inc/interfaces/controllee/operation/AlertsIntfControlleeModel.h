/******************************************************************************
 * Copyright (c) 2016 Open Connectivity Foundation (OCF) and AllJoyn Open
 *    Source Project (AJOSP) Contributors and others.
 *
 *    SPDX-License-Identifier: Apache-2.0
 *
 *    All rights reserved. This program and the accompanying materials are
 *    made available under the terms of the Apache License, Version 2.0
 *    which accompanies this distribution, and is available at
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Copyright 2016 Open Connectivity Foundation and Contributors to
 *    AllSeen Alliance. All rights reserved.
 *
 *    Permission to use, copy, modify, and/or distribute this software for
 *    any purpose with or without fee is hereby granted, provided that the
 *    above copyright notice and this permission notice appear in all
 *    copies.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
 *     WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
 *     WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
 *     AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 *     DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 *     PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 *     TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 *     PERFORMANCE OF THIS SOFTWARE.
 ******************************************************************************/

// This file is automatically generated. Do not edit it.

#ifndef ALERTSINTFCONTROLLEELISTENER_H_
#define ALERTSINTFCONTROLLEELISTENER_H_

#include <qcc/String.h>
#include <alljoyn/Status.h>
#include <alljoyn/cdm/common/CdmTypes.h>
#include <alljoyn/cdm/common/CdmInterfaceErrors.h>
#include <alljoyn/cdm/controllee/InterfaceControlleeModel.h>

#include <alljoyn/cdm/controllee/CdmControlleeInterface.h>
#include <alljoyn/cdm/controllee/CdmControllee.h>
#include <interfaces/common/operation/AlertsInterface.h>

namespace ajn {
namespace services {

/**
 * Alerts Model Interface class for the Controllee
 */
class AlertsIntfControlleeModel : public virtual InterfaceControlleeModel {
  public:
    using Severity = AlertsInterface::Severity;
    using AlertRecord = AlertsInterface::AlertRecord;
    using AlertCodesDescriptor = AlertsInterface::AlertCodesDescriptor;

    /**
     * Destructor of AlertsIntfControlleeModel
     */
    virtual ~AlertsIntfControlleeModel() {}

    /**
     * Get Alerts
     * @return current alerts
     */
    virtual QStatus GetAlerts(std::vector<AlertsInterface::AlertRecord>& out) const = 0;

    /**
     * Handler for method GetAlertCodesDescription
     * @param[out] error Internal error code occurred during command execution
     * @return ER_OK on success
     */
    virtual QStatus GetAlertCodesDescription(qcc::String& arg_languageTag, std::vector<AlertsInterface::AlertCodesDescriptor>& arg_description, ErrorCode& error, CdmControllee& controllee) = 0;
    /**
     * Handler for method AcknowledgeAlert
     * @param[out] error Internal error code occurred during command execution
     * @return ER_OK on success
     */
    virtual QStatus AcknowledgeAlert(uint16_t arg_alertCode, ErrorCode& error, CdmControllee& controllee) = 0;
    /**
     * Handler for method AcknowledgeAllAlerts
     * @param[out] error Internal error code occurred during command execution
     * @return ER_OK on success
     */
    virtual QStatus AcknowledgeAllAlerts(ErrorCode& error, CdmControllee& controllee) = 0;
};

} //namespace services
} //namespace ajn

#endif /* ALERTSINTFCONTROLLEELISTENER_H_ */
